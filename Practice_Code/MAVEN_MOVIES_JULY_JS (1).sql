-- Get all the Movies List 

USE MAVENMOVIES;

SELECT * FROM RENTAL;

SELECT * FROM FILM;

SELECT * FROM INVENTORY;

SELECT * FROM PAYMENT;

SELECT * FROM CUSTOMER;

SELECT * FROM ADDRESS;

SELECT * FROM CITY;

SELECT * FROM COUNTRY;

SELECT * FROM LANGUAGE;

SELECT * FROM CATEGORY;

SELECT * FROM FILM_CATEGORY;

SELECT * FROM ACTOR;

SELECT * FROM FILM_ACTOR;

-- GET THE LIST OF CUSTOMERS AND THEIR EMAIL IDS

SELECT EMAIL,FIRST_NAME,LAST_NAME
FROM CUSTOMER;

-- GET THE LIST OF FIRST 10 CUSTOMERS AND THEIR EMAIL IDS

SELECT CUSTOMER_ID,EMAIL,FIRST_NAME,LAST_NAME
FROM CUSTOMER
LIMIT 10 OFFSET 2;


-- Total revenue and total transactios

SELECT SUM(AMOUNT) AS REVENUE
FROM PAYMENT;

SELECT COUNT(*) AS TOTAL_TRANS
FROM CUSTOMER;

SELECT COUNT(ADDRESS2)
FROM ADDRESS;

SELECT AVG(AMOUNT) AS AOV
FROM PAYMENT;

-- We want to merge each customer’s name into a single column that contains the first name, then a space, and then the last name


SELECT *,CONCAT(FIRST_NAME," ",LAST_NAME) AS FULL_NAME
FROM CUSTOMER;

SELECT *,LOWER(FIRST_NAME),UPPER(EMAIL)
FROM CUSTOMER;

SELECT *,CONCAT(FIRST_NAME," ",SUBSTR(LAST_NAME,1,1)) AS USER_NAME
FROM CUSTOMER;

-- FILTERING RENTAL TABLE AS PER CUSTOMER

SELECT *
FROM RENTAL
WHERE CUSTOMER_ID <> 5;

SELECT *
FROM RENTAL
ORDER BY CUSTOMER_ID DESC;

SELECT *
FROM CUSTOMER
WHERE CUSTOMER_ID <= 7 AND CUSTOMER_ID >= 3;

SELECT *
FROM CUSTOMER
WHERE CUSTOMER_ID < 5 OR CUSTOMER_ID > 3;

SELECT *
FROM CUSTOMER
WHERE CUSTOMER_ID BETWEEN 3 AND 7;

SELECT *
FROM CUSTOMER
WHERE CUSTOMER_ID = 1 OR CUSTOMER_ID = 3 OR CUSTOMER_ID = 5;


SELECT *
FROM CUSTOMER
WHERE CUSTOMER_ID IN (1,3,5,6,7); 

-- Print a report of everything the customer_id 4 has ever purchased at the store,and sort this data by date

SELECT *
FROM RENTAL
WHERE CUSTOMER_ID = 4
ORDER BY RENTAL_DATE DESC;

-- -You want to get data about a customer you knew as Julie, but do not remember the full name

SELECT CUSTOMER_ID
FROM CUSTOMER
WHERE FIRST_NAME LIKE "JU%";

-- 1. % - stands for 0 or more characters
-- 2. _ (underscore) - stands for 1 and only 1 character

-- Examples
-- LIKE “a%” - any length string starting with “a”
-- LIKE “%a” - anything length string with ends with “a”
-- LIKE “%em%” - any string with “em” in between, will match “em” also
-- LIKE “a_” - Any string with length 2 and starting from “a”
-- LIKE “a_%” - A string with starts from “a” and at least is 2 character long

SELECT *
FROM PAYMENT
WHERE CUSTOMER_ID IN (SELECT CUSTOMER_ID
FROM CUSTOMER
WHERE FIRST_NAME LIKE "JU%");

-- TAG THE CUSTOMERS AS "ACTIVE" OR "INACTIVE"

SELECT *,IF(ACTIVE = "1","Active_Customer","Inactive_Customer") AS CUSTOMER_ACTIVTY
FROM CUSTOMER;

-- “I’d like to know which store each customer goes to, and whether or
-- not they are active. Could you pull a list of first and last names of all customers, and
-- label them as either ‘store 1 active’, ‘store 1 inactive’, ‘store 2 active’, or ‘store 2 inactive’?”

SELECT *,
CASE
	WHEN STORE_ID = 1 AND ACTIVE = 1 THEN "STORE 1 ACTIVE"
    WHEN STORE_ID = 1 AND ACTIVE = 0 THEN "STORE 1 INACTIVE"
    WHEN STORE_ID = 2 AND ACTIVE = 1 THEN "STORE 2 ACTIVE"
    WHEN STORE_ID = 2 AND ACTIVE = 0 THEN "STORE 2 INACTIVE"
    ELSE "ERROR"
END AS STORE_ACTIVITIY
FROM CUSTOMER;

-- “Can you pull for me a list of each film we have in inventory?
-- I would like to see the film’s title, description, and the store_id value
-- associated with each item, and its inventory_id. Thanks!”

SELECT F.TITLE,F.DESCRIPTION,INV.STORE_ID,INV.INVENTORY_ID
FROM INVENTORY  AS INV INNER JOIN FILM AS F
ON INV.FILM_ID = F.FILM_ID;

SELECT DISTINCT F.TITLE,F.DESCRIPTION
FROM INVENTORY  AS INV INNER JOIN FILM AS F
ON INV.FILM_ID = F.FILM_ID;

SELECT * FROM FILM;

-- We need to understand the special features in our films. Could you pull a list of films which
-- include a Behind the Scenes special feature?

SELECT *
FROM FILM
WHERE SPECIAL_FEATURES LIKE "%Behind the Scenes%";

-- “We will be hosting a meeting with all of our staff and advisors soon. Could you pull one list of all staff
-- and advisor names, and include a column noting whether they are a staff member or advisor? Thanks!”

(SELECT FIRST_NAME,LAST_NAME,"ADVISOR_MEMBER" AS DESIGNATION
FROM ADVISOR

UNION ALL

SELECT FIRST_NAME,LAST_NAME,"STAFF_MEMBER" AS DESIGNATION
FROM STAFF);

-- List of films by Film Name, Category

SELECT F.TITLE AS FILM_NAME, C.NAME AS CATEGORY_NAME
FROM FILM AS F LEFT JOIN FILM_CATEGORY  AS FC
ON F.FILM_ID = FC.FILM_ID LEFT JOIN CATEGORY AS C
ON FC.CATEGORY_ID = C.CATEGORY_ID;

-- FIGURE OUT MOVIES THAT ARE NOT IN INVENTORY

SELECT F.FILM_ID, F.TITLE,F.REPLACEMENT_COST
FROM FILM AS F LEFT JOIN INVENTORY AS INV
ON INV.FILM_ID = F.FILM_ID
WHERE INV.FILM_ID IS NULL;

-- BEST CUSTOMER BASED ON REVENUE

SELECT CUSTOMER_ID,SUM(AMOUNT) AS CUSTOMER_REVENUE
FROM PAYMENT
GROUP BY CUSTOMER_ID
ORDER BY CUSTOMER_REVENUE DESC
LIMIT 10;

SELECT C.CUSTOMER_ID,C.FIRST_NAME,C.LAST_NAME,C.EMAIL,SUM(P.AMOUNT) AS REVENUE_PER_CUSTOMER
FROM PAYMENT AS P LEFT JOIN CUSTOMER AS C
ON P.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY C.CUSTOMER_ID
ORDER BY REVENUE_PER_CUSTOMER DESC
LIMIT 10;

-- TOP 10 GROSSERS (FILMS BY REVENUE)

SELECT F.FILM_ID,F.TITLE,SUM(P.AMOUNT) AS REVENUE_PER_FILM
FROM PAYMENT AS P LEFT JOIN RENTAL AS R
ON P.RENTAL_ID = R.RENTAL_ID LEFT JOIN INVENTORY AS INV
ON R.INVENTORY_ID = INV.INVENTORY_ID LEFT JOIN FILM AS F
ON INV.FILM_ID = F.FILM_ID
GROUP BY F.FILM_ID
ORDER BY REVENUE_PER_FILM DESC
LIMIT 10;

-- WE HAVE 2 STORES, FIND THE BEST PERFORMING STORE AS PER REVENUE

SELECT S.STORE_ID,SUM(P.AMOUNT) AS REVENUE_PER_STORE
FROM PAYMENT AS P LEFT JOIN STAFF AS S
ON P.STAFF_ID = S.STAFF_ID
GROUP BY S.STORE_ID
ORDER BY REVENUE_PER_STORE DESC
LIMIT 1;
